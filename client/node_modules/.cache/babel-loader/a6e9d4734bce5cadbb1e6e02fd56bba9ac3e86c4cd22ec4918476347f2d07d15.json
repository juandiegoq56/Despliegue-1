{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction parseJwt(token) {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\nconst useTokenValidation = () => {\n  _s();\n  const [isLogged, setIsLogged] = useState(false);\n  useEffect(() => {\n    const checkTokenExpiration = () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsLogged(false);\n      } else {\n        const tokenExpirationTime = parseJwt(token);\n        if (tokenExpirationTime < Date.now()) {\n          setIsLogged(false);\n        } else {\n          setIsLogged(true);\n        }\n      }\n    };\n    checkTokenExpiration();\n    const tokenCheckInterval = setInterval(checkTokenExpiration, 60000);\n    return () => clearInterval(tokenCheckInterval);\n  }, []);\n  return isLogged;\n};\n_s(useTokenValidation, \"dRlzShjuI4LWOFstjKjMBcwcjrM=\");\nexport default useTokenValidation;","map":{"version":3,"names":["useState","useEffect","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","useTokenValidation","_s","isLogged","setIsLogged","checkTokenExpiration","localStorage","getItem","tokenExpirationTime","Date","now","tokenCheckInterval","setInterval","clearInterval"],"sources":["/home/juan/Desktop/Proyectos/Login jwt/client/src/components/useUser.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nfunction parseJwt (token) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  \n    return JSON.parse(jsonPayload);\n  }\n  \nconst useTokenValidation = () => {\n  const [isLogged, setIsLogged] = useState(false);\n\n  useEffect(() => {\n    const checkTokenExpiration = () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsLogged(false);\n      } else {\n        const tokenExpirationTime = parseJwt(token);\n        if (tokenExpirationTime < Date.now()) {\n          setIsLogged(false);\n        } else {\n          setIsLogged(true);\n        }\n      }\n    };\n\n    checkTokenExpiration();\n\n    const tokenCheckInterval = setInterval(checkTokenExpiration, 60000);\n    return () => clearInterval(tokenCheckInterval);\n  }, []);\n\n  return isLogged;\n};\n\nexport default useTokenValidation;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQA,CAAEC,KAAK,EAAE;EACtB,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACO,GAAG,CAAC,UAASC,CAAC,EAAE;IACjF,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAEZ,OAAOC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;AAChC;AAEF,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMuB,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMrB,KAAK,GAAGsB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACvB,KAAK,EAAE;QACVoB,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,MAAM;QACL,MAAMI,mBAAmB,GAAGzB,QAAQ,CAACC,KAAK,CAAC;QAC3C,IAAIwB,mBAAmB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;UACpCN,WAAW,CAAC,KAAK,CAAC;QACpB,CAAC,MAAM;UACLA,WAAW,CAAC,IAAI,CAAC;QACnB;MACF;IACF,CAAC;IAEDC,oBAAoB,CAAC,CAAC;IAEtB,MAAMM,kBAAkB,GAAGC,WAAW,CAACP,oBAAoB,EAAE,KAAK,CAAC;IACnE,OAAO,MAAMQ,aAAa,CAACF,kBAAkB,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOR,QAAQ;AACjB,CAAC;AAACD,EAAA,CAzBID,kBAAkB;AA2BxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}