{"ast":null,"code":"import axios from 'axios';\n\n// Función para convertir una imagen Blob a base64\nconst blobToBase64 = blob => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = reject;\n  });\n};\n\n// Función para obtener las aplicaciones y convertir las imágenes Blob a base64\nconst apps = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/usuarios');\n    const apps = response.data;\n    const appsWithBase64Images = await Promise.all(apps.map(async app => {\n      const base64Image = await blobToBase64(app.imagen);\n      return {\n        ...app,\n        imagen: base64Image\n      };\n    }));\n    return appsWithBase64Images;\n  } catch (error) {\n    console.error('Error al obtener las aplicaciones:', error);\n    return [];\n  }\n};\nexport default apps();","map":{"version":3,"names":["axios","blobToBase64","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","onerror","apps","response","get","data","appsWithBase64Images","all","map","app","base64Image","imagen","error","console"],"sources":["C:/Users/judqu/OneDrive/Escritorio/azteca/Despliegue-1/client/src/Vistas/Apps.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Función para convertir una imagen Blob a base64\r\nconst blobToBase64 = (blob) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = () => {\r\n      resolve(reader.result);\r\n    };\r\n    reader.onerror = reject;\r\n  });\r\n};\r\n\r\n// Función para obtener las aplicaciones y convertir las imágenes Blob a base64\r\nconst apps = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3001/usuarios');\r\n    const apps = response.data;\r\n\r\n    const appsWithBase64Images = await Promise.all(\r\n      apps.map(async (app) => {\r\n        const base64Image = await blobToBase64(app.imagen);\r\n        return { ...app, imagen: base64Image };\r\n      })\r\n    );\r\n\r\n    return appsWithBase64Images;\r\n  } catch (error) {\r\n    console.error('Error al obtener las aplicaciones:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default apps();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC;IAC1BI,MAAM,CAACG,SAAS,GAAG,MAAM;MACvBL,OAAO,CAACE,MAAM,CAACI,MAAM,CAAC;IACxB,CAAC;IACDJ,MAAM,CAACK,OAAO,GAAGN,MAAM;EACzB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMO,IAAI,GAAG,MAAAA,CAAA,KAAY;EACvB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,CAAC;IAClE,MAAMF,IAAI,GAAGC,QAAQ,CAACE,IAAI;IAE1B,MAAMC,oBAAoB,GAAG,MAAMb,OAAO,CAACc,GAAG,CAC5CL,IAAI,CAACM,GAAG,CAAC,MAAOC,GAAG,IAAK;MACtB,MAAMC,WAAW,GAAG,MAAMnB,YAAY,CAACkB,GAAG,CAACE,MAAM,CAAC;MAClD,OAAO;QAAE,GAAGF,GAAG;QAAEE,MAAM,EAAED;MAAY,CAAC;IACxC,CAAC,CACH,CAAC;IAED,OAAOJ,oBAAoB;EAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAeV,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}