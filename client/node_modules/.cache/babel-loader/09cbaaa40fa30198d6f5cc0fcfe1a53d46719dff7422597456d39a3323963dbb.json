{"ast":null,"code":"import axios from 'axios';\nconst response = await axios.get('http://localhost:3001/usuarios');\nconst apps = response.data;\n\n// Convertir la imagen en formato base64 a formato PNG\napps.forEach(item => {\n  const base64String = item.imagen; // Suponiendo que 'imagen' contiene la cadena base64 de la imagen\n  const blob = new Blob([base64String], {\n    type: 'image/png'\n  }); // Crear un blob con la cadena base64\n  const imageUrl = URL.createObjectURL(blob); // Crear una URL a partir del blob\n\n  // Actualizar la propiedad 'imagen' del objeto 'item' con la URL de la imagen PNG\n  item.imagen = imageUrl;\n});\nexport default apps;","map":{"version":3,"names":["axios","response","get","apps","data","forEach","item","base64String","imagen","blob","Blob","type","imageUrl","URL","createObjectURL"],"sources":["C:/Users/judqu/OneDrive/Escritorio/azteca/Despliegue-1/client/src/Vistas/Apps.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst response = await axios.get('http://localhost:3001/usuarios');\r\nconst apps = response.data;\r\n\r\n// Convertir la imagen en formato base64 a formato PNG\r\napps.forEach(item => {\r\n    const base64String = item.imagen; // Suponiendo que 'imagen' contiene la cadena base64 de la imagen\r\n    const blob = new Blob([base64String], { type: 'image/png' }); // Crear un blob con la cadena base64\r\n    const imageUrl = URL.createObjectURL(blob); // Crear una URL a partir del blob\r\n\r\n    // Actualizar la propiedad 'imagen' del objeto 'item' con la URL de la imagen PNG\r\n    item.imagen = imageUrl;\r\n});\r\n\r\nexport default apps;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,MAAMD,KAAK,CAACE,GAAG,CAAC,gCAAgC,CAAC;AAClE,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI;;AAE1B;AACAD,IAAI,CAACE,OAAO,CAACC,IAAI,IAAI;EACjB,MAAMC,YAAY,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC;EAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,YAAY,CAAC,EAAE;IAAEI,IAAI,EAAE;EAAY,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACAH,IAAI,CAACE,MAAM,GAAGI,QAAQ;AAC1B,CAAC,CAAC;AAEF,eAAeT,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}