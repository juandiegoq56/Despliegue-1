{"ast":null,"code":"import axios from 'axios';\nconst fetchApps = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/usuarios');\n    const app2 = response.data;\n    const apps = app2.map(app => {\n      if (app.imagen instanceof Blob) {\n        // Crear una nueva instancia de FileReader\n        const reader = new FileReader();\n\n        // Configurar el evento load para manejar la finalización de la lectura\n        reader.onload = () => {\n          // Asignar la URL base64 a la propiedad imagen\n          app.imagen = reader.result;\n        };\n\n        // Leer el buffer como una URL de datos (base64)\n        reader.readAsDataURL(app.imagen);\n      }\n      return app;\n    });\n    return apps;\n  } catch (error) {\n    console.error('Error fetching apps:', error);\n    return [];\n  }\n};\nexport default fetchApps;","map":{"version":3,"names":["axios","fetchApps","response","get","app2","data","apps","map","app","imagen","Blob","reader","FileReader","onload","result","readAsDataURL","error","console"],"sources":["C:/Users/judqu/OneDrive/Escritorio/azteca/Despliegue-1/client/src/Vistas/Apps.js"],"sourcesContent":["    import axios from 'axios';\r\n   \r\n\r\nconst fetchApps = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3001/usuarios');\r\n    const app2 = response.data;\r\n    const apps = app2.map((app) => {\r\n      if (app.imagen instanceof Blob) {\r\n        // Crear una nueva instancia de FileReader\r\n        const reader = new FileReader();\r\n\r\n        // Configurar el evento load para manejar la finalización de la lectura\r\n        reader.onload = () => {\r\n          // Asignar la URL base64 a la propiedad imagen\r\n          app.imagen = reader.result;\r\n        };\r\n\r\n        // Leer el buffer como una URL de datos (base64)\r\n        reader.readAsDataURL(app.imagen);\r\n      }\r\n      return app;\r\n    });\r\n    return apps;\r\n  } catch (error) {\r\n    console.error('Error fetching apps:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default fetchApps;\r\n\r\n\r\n      "],"mappings":"AAAI,OAAOA,KAAK,MAAM,OAAO;AAG7B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;IAClE,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI;IAC1B,MAAMC,IAAI,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAK;MAC7B,IAAIA,GAAG,CAACC,MAAM,YAAYC,IAAI,EAAE;QAC9B;QACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;;QAE/B;QACAD,MAAM,CAACE,MAAM,GAAG,MAAM;UACpB;UACAL,GAAG,CAACC,MAAM,GAAGE,MAAM,CAACG,MAAM;QAC5B,CAAC;;QAED;QACAH,MAAM,CAACI,aAAa,CAACP,GAAG,CAACC,MAAM,CAAC;MAClC;MACA,OAAOD,GAAG;IACZ,CAAC,CAAC;IACF,OAAOF,IAAI;EACb,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAef,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}